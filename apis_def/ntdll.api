[NtdllDefWindowProc_A]
1=HWND hWnd
2=UINT Msg
3=WPARAM wParam
4=LPARAM lParam
ParamCount=4
@=NtdllDefWindowProc_A(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
[NtdllDefWindowProc_W]
1=HWND hWnd
2=UINT Msg
3=WPARAM wParam
4=LPARAM lParam
ParamCount=4
@=NtdllDefWindowProc_W(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
[NtdllDefWindowProc]
1=HWND hWnd
2=UINT Msg
3=WPARAM wParam
4=LPARAM lParam
ParamCount=4
@=NtdllDefWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
[DefWindowProcA]
1=HWND hWnd
2=UINT Msg
3=WPARAM wParam
4=LPARAM lParam
ParamCount=4
@=DefWindowProcA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
[DefWindowProcW]
1=HWND hWnd
2=UINT Msg
3=WPARAM wParam
4=LPARAM lParam
ParamCount=4
@=DefWindowProcW(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
[PostQuitMessage]
1=int nExitCode
ParamCount=1
@=PostQuitMessage(int nExitCode);
[Int64ShllMod32]
1=ULONGLONG Value
2=DWORD ShiftCount
ParamCount=2
@=Int64ShllMod32(ULONGLONG Value, DWORD ShiftCount);
[Int64ShraMod32]
1=LONGLONG Value
2=DWORD ShiftCount
ParamCount=2
@=Int64ShraMod32(LONGLONG Value, DWORD ShiftCount);
[Int64ShrlMod32]
1=ULONGLONG Value
2=DWORD ShiftCount
ParamCount=2
@=Int64ShrlMod32(ULONGLONG Value, DWORD ShiftCount);
[EXCEPTION_ROUTINE]
1=_EXCEPTION_RECORD *ExceptionRecord
2=PVOID EstablisherFrame
3=_CONTEXT *ContextRecord
4=PVOID DispatcherContext
ParamCount=4
@=EXCEPTION_ROUTINE(_EXCEPTION_RECORD *ExceptionRecord, PVOID EstablisherFrame, _CONTEXT *ContextRecord, PVOID DispatcherContext);
[RtlLookupFunctionEntry]
1=ULONGLONG ControlPc
2=PULONGLONG ImageBase
3=PULONGLONG TargetGp
ParamCount=3
@=RtlLookupFunctionEntry(ULONGLONG ControlPc, PULONGLONG ImageBase, PULONGLONG TargetGp);
[RtlVirtualUnwind]
1=ULONGLONG ImageBase
2=ULONGLONG ControlPc
3=PRUNTIME_FUNCTION FunctionEntry
4=PCONTEXT ContextRecord
5=PBOOLEAN InFunction
6=PFRAME_POINTERS EstablisherFrame
7=PKNONVOLATILE_CONTEXT_POINTERS ContextPointers
8=PKNONVOLATILE_CONTEXT_POINTERS ContextPointers
ParamCount=7
@=RtlVirtualUnwind(ULONGLONG ImageBase, ULONGLONG ControlPc, PRUNTIME_FUNCTION FunctionEntry, PCONTEXT ContextRecord, PBOOLEAN InFunction, PFRAME_POINTERS EstablisherFrame, PKNONVOLATILE_CONTEXT_POINTERS ContextPointers);
[RtlAddFunctionTable]
1=PRUNTIME_FUNCTION FunctionTable
2=DWORD EntryCount
3=ULONGLONG BaseAddress
4=ULONGLONG TargetGp
ParamCount=4
@=RtlAddFunctionTable(PRUNTIME_FUNCTION FunctionTable, DWORD EntryCount, ULONGLONG BaseAddress, ULONGLONG TargetGp);
[RtlInstallFunctionTableCallback]
1=DWORD64 TableIdentifier
2=DWORD64 BaseAddress
3=DWORD Length
4=DWORD64 TargetGp
5=PGET_RUNTIME_FUNCTION_CALLBACK Callback
6=PVOID Context
7=PCWSTR OutOfProcessCallbackDll
ParamCount=7
@=RtlInstallFunctionTableCallback(DWORD64 TableIdentifier, DWORD64 BaseAddress, DWORD Length, DWORD64 TargetGp, PGET_RUNTIME_FUNCTION_CALLBACK Callback, PVOID Context, PCWSTR OutOfProcessCallbackDll);
[RtlDeleteFunctionTable]
1=PRUNTIME_FUNCTION FunctionTable
ParamCount=1
@=RtlDeleteFunctionTable(PRUNTIME_FUNCTION FunctionTable);
[RtlRestoreContext]
1=PCONTEXT ContextRecord
2=_EXCEPTION_RECORD *ExceptionRecord
ParamCount=2
@=RtlRestoreContext(PCONTEXT ContextRecord, _EXCEPTION_RECORD *ExceptionRecord);
[__jump_unwind]
1=ULONGLONG TargetMsFrame
2=ULONGLONG TargetBsFrame
3=ULONGLONG TargetPc
ParamCount=3
@=__jump_unwind(ULONGLONG TargetMsFrame, ULONGLONG TargetBsFrame, ULONGLONG TargetPc);
[RtlUnwind]
1=PVOID TargetFrame
2=PVOID TargetIp
3=PEXCEPTION_RECORD ExceptionRecord
4=PVOID ReturnValue
ParamCount=4
@=RtlUnwind(PVOID TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue);
[RtlUnwind2]
1=FRAME_POINTERS TargetFrame
2=PVOID TargetIp
3=PEXCEPTION_RECORD ExceptionRecord
4=PVOID ReturnValue
5=PCONTEXT ContextRecord
ParamCount=5
@=RtlUnwind2(FRAME_POINTERS TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue, PCONTEXT ContextRecord);
[RtlUnwindEx]
1=FRAME_POINTERS TargetFrame
2=PVOID TargetIp
3=PEXCEPTION_RECORD ExceptionRecord
4=PVOID ReturnValue
5=PCONTEXT ContextRecord
6=PUNWIND_HISTORY_TABLE HistoryTable
ParamCount=6
@=RtlUnwindEx(FRAME_POINTERS TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue, PCONTEXT ContextRecord, PUNWIND_HISTORY_TABLE HistoryTable);
[RtlInitializeSListHead]
1=PSLIST_HEADER ListHead
ParamCount=1
@=RtlInitializeSListHead(PSLIST_HEADER ListHead);
[RtlFirstEntrySList]
1=SLIST_HEADER *ListHead
ParamCount=1
@=RtlFirstEntrySList(SLIST_HEADER *ListHead);
[RtlInterlockedPopEntrySList]
1=PSLIST_HEADER ListHead
ParamCount=1
@=RtlInterlockedPopEntrySList(PSLIST_HEADER ListHead);
[RtlInterlockedPushEntrySList]
1=PSLIST_HEADER ListHead
2=PSLIST_HEADER PSLIST_ENTRYListEntry
ParamCount=2
@=RtlInterlockedPushEntrySList(PSLIST_HEADER ListHead, PSLIST_HEADER PSLIST_ENTRYListEntry);
[RtlInterlockedFlushSList]
1=PSLIST_HEADER ListHead
ParamCount=1
@=RtlInterlockedFlushSList(PSLIST_HEADER ListHead);
[RtlQueryDepthSList]
1=PSLIST_HEADER ListHead
ParamCount=1
@=RtlQueryDepthSList(PSLIST_HEADER ListHead);
[RtlInterlockedPopEntrySList32]
1=PSLIST_HEADER32 ListHead
ParamCount=1
@=RtlInterlockedPopEntrySList32(PSLIST_HEADER32 ListHead);
[RTL_RUN_ONCE_INIT_FN]
1=PRTL_RUN_ONCE RunOnce
2=PVOID Parameter
3=PVOID *Context
ParamCount=3
@=RTL_RUN_ONCE_INIT_FN(PRTL_RUN_ONCE RunOnce, PVOID Parameter, PVOID *Context);
[RtlRunOnceInitialize]
1=PRTL_RUN_ONCE RunOnce
ParamCount=1
@=RtlRunOnceInitialize(PRTL_RUN_ONCE RunOnce);
[RtlRunOnceExecuteOnce]
1=PRTL_RUN_ONCE RunOnce
2=PRTL_RUN_ONCE PRTL_RUN_ONCE_INIT_FNInitFn
3=PVOID Parameter
4=PVOID *Context
ParamCount=4
@=RtlRunOnceExecuteOnce(PRTL_RUN_ONCE RunOnce, PRTL_RUN_ONCE PRTL_RUN_ONCE_INIT_FNInitFn, PVOID Parameter, PVOID *Context);
[RtlRunOnceBeginInitialize]
1=PRTL_RUN_ONCE RunOnce
2=DWORD Flags
3=PVOID *Context
ParamCount=3
@=RtlRunOnceBeginInitialize(PRTL_RUN_ONCE RunOnce, DWORD Flags, PVOID *Context);
[RtlRunOnceComplete]
1=PRTL_RUN_ONCE RunOnce
2=DWORD Flags
3=PVOID Context
ParamCount=3
@=RtlRunOnceComplete(PRTL_RUN_ONCE RunOnce, DWORD Flags, PVOID Context);
[RtlCaptureStackBackTrace]
1=DWORD FramesToSkip
2=DWORD FramesToCapture
3=PVOID *BackTrace
4=PDWORD BackTraceHash
ParamCount=4
@=RtlCaptureStackBackTrace(DWORD FramesToSkip, DWORD FramesToCapture, PVOID *BackTrace, PDWORD BackTraceHash);
[RtlCaptureContext]
1=PCONTEXT ContextRecord
ParamCount=1
@=RtlCaptureContext(PCONTEXT ContextRecord);
[RtlCompareMemory]
1=VOID *Source1
2=VOID *Source2
3=SIZE_T Length
ParamCount=3
@=RtlCompareMemory(VOID *Source1, VOID *Source2, SIZE_T Length);
[RtlPcToFileHeader]
1=PVOID PcValue
2=PVOID *BaseOfImage
ParamCount=2
@=RtlPcToFileHeader(PVOID PcValue, PVOID *BaseOfImage);
[VerSetConditionMask]
1=ULONGLONG ConditionMask
2=DWORD TypeMask
3=BYTE Condition
ParamCount=3
@=VerSetConditionMask(ULONGLONG ConditionMask, DWORD TypeMask, BYTE Condition);
[RtlGetProductInfo]
1=DWORD OSMajorVersion
2=DWORD OSMinorVersion
3=DWORD SpMajorVersion
4=DWORD SpMinorVersion
5=PDWORD ReturnedProductType
ParamCount=5
@=RtlGetProductInfo(DWORD OSMajorVersion, DWORD OSMinorVersion, DWORD SpMajorVersion, DWORD SpMinorVersion, PDWORD ReturnedProductType);
[RTL_UMS_SCHEDULER_ENTRY_POINT]
1=RTL_UMS_SCHEDULER_REASON Reason
2=ULONG_PTR ActivationPayload
3=PVOID SchedulerParam
ParamCount=3
@=RTL_UMS_SCHEDULER_ENTRY_POINT(RTL_UMS_SCHEDULER_REASON Reason, ULONG_PTR ActivationPayload, PVOID SchedulerParam);
[RtlCopyExtendedContext]
1=PCONTEXT_EX Destination
2=DWORD ContextFlags
3=PCONTEXT_EX Source
ParamCount=3
@=RtlCopyExtendedContext(PCONTEXT_EX Destination, DWORD ContextFlags, PCONTEXT_EX Source);
[RtlInitializeExtendedContext]
1=PVOID Context
2=DWORD ContextFlags
3=PCONTEXT_EX* ContextEx
ParamCount=3
@=RtlInitializeExtendedContext(PVOID Context, DWORD ContextFlags, PCONTEXT_EX* ContextEx);
[RtlGetEnabledExtendedFeatures]
1=DWORD64 FeatureMask
ParamCount=1
@=RtlGetEnabledExtendedFeatures(DWORD64 FeatureMask);
[RtlGetExtendedContextLength]
1=DWORD ContextFlags
2=PDWORD ContextLength
ParamCount=2
@=RtlGetExtendedContextLength(DWORD ContextFlags, PDWORD ContextLength);
[RtlGetExtendedFeaturesMask]
1=PCONTEXT_EX ContextEx
ParamCount=1
@=RtlGetExtendedFeaturesMask(PCONTEXT_EX ContextEx);
[RtlLocateExtendedFeature]
1=PCONTEXT_EX ContextEx
2=DWORD FeatureId
3=PDWORD Length
ParamCount=3
@=RtlLocateExtendedFeature(PCONTEXT_EX ContextEx, DWORD FeatureId, PDWORD Length);
[RtlLocateLegacyContext]
1=PCONTEXT_EX ContextEx
2=PDWORD Length
ParamCount=2
@=RtlLocateLegacyContext(PCONTEXT_EX ContextEx, PDWORD Length);
[RtlSetExtendedFeaturesMask]
1=PCONTEXT_EX ContextEx
2=DWORD64 FeatureMask
ParamCount=2
@=RtlSetExtendedFeaturesMask(PCONTEXT_EX ContextEx, DWORD64 FeatureMask);
[NtClose]
1=HANDLE Handle
ParamCount=1
@=NtClose(HANDLE Handle);
[NtCreateFile]
1=OUT PHANDLEFileHandle
2=ACCESS_MASK DesiredAccess
3=POBJECT_ATTRIBUTES ObjectAttributes
4=IoStatusBlock
5=PLARGE_INTEGER AllocationSizeOPTIONAL
6=ULONG FileAttributes
7=ULONG ShareAccess
8=ULONG CreateDisposition
9=ULONG CreateOptions
10=PVOID EaBufferOPTIONAL
11=ULONG EaLength
ParamCount=11
@=NtCreateFile(OUT PHANDLEFileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, IoStatusBlock, PLARGE_INTEGER AllocationSizeOPTIONAL, ULONG FileAttributes, ULONG ShareAccess, ULONG CreateDisposition, ULONG CreateOptions, PVOID EaBufferOPTIONAL, ULONG EaLength);
[NtOpenFile]
1=OUT PHANDLEFileHandle
2=ACCESS_MASK DesiredAccess
3=POBJECT_ATTRIBUTES ObjectAttributes
4=IoStatusBlock
5=ULONG ShareAccess
6=ULONG OpenOptions
ParamCount=6
@=NtOpenFile(OUT PHANDLEFileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, IoStatusBlock, ULONG ShareAccess, ULONG OpenOptions);
[NtDeviceIoControlFile]
1=HANDLE FileHandle
2=HANDLE EventOPTIONAL
3=PIO_APC_ROUTINE ApcRoutineOPTIONAL
4=PVOID ApcContextOPTIONAL
5=IoStatusBlock
6=ULONG IoControlCode
7=PVOID InputBufferOPTIONAL
8=ULONG InputBufferLength
9=OUT PVOIDOutputBufferOPTIONAL
10=ULONG OutputBufferLength
ParamCount=10
@=NtDeviceIoControlFile(HANDLE FileHandle, HANDLE EventOPTIONAL, PIO_APC_ROUTINE ApcRoutineOPTIONAL, PVOID ApcContextOPTIONAL, IoStatusBlock, ULONG IoControlCode, PVOID InputBufferOPTIONAL, ULONG InputBufferLength, OUT PVOIDOutputBufferOPTIONAL, ULONG OutputBufferLength);
[NtWaitForSingleObject]
1=HANDLE Handle
2=BOOLEAN Alertable
3=PLARGE_INTEGER TimeoutOPTIONAL
ParamCount=3
@=NtWaitForSingleObject(HANDLE Handle, BOOLEAN Alertable, PLARGE_INTEGER TimeoutOPTIONAL);
[RtlIsNameLegalDOS8Dot3]
1=PUNICODE_STRING Name
2=OUT POEM_STRINGOemNameOPTIONAL
3=OUT PBOOLEANNameContainsSpacesOPTIONAL
ParamCount=3
@=RtlIsNameLegalDOS8Dot3(PUNICODE_STRING Name, OUT POEM_STRINGOemNameOPTIONAL, OUT PBOOLEANNameContainsSpacesOPTIONAL);
[RtlNtStatusToDosError]
1=NTSTATUS Status
ParamCount=1
@=RtlNtStatusToDosError(NTSTATUS Status);
[NtQueryInformationProcess]
1=HANDLE ProcessHandle
2=PROCESSINFOCLASS ProcessInformationClass
3=OUT PVOIDProcessInformation
4=ULONG ProcessInformationLength
5=OUT PULONGReturnLengthOPTIONAL
ParamCount=5
@=NtQueryInformationProcess(HANDLE ProcessHandle, PROCESSINFOCLASS ProcessInformationClass, OUT PVOIDProcessInformation, ULONG ProcessInformationLength, OUT PULONGReturnLengthOPTIONAL);
[NtQueryInformationThread]
1=HANDLE ThreadHandle
2=THREADINFOCLASS ThreadInformationClass
3=OUT PVOIDThreadInformation
4=ULONG ThreadInformationLength
5=OUT PULONGReturnLengthOPTIONAL
ParamCount=5
@=NtQueryInformationThread(HANDLE ThreadHandle, THREADINFOCLASS ThreadInformationClass, OUT PVOIDThreadInformation, ULONG ThreadInformationLength, OUT PULONGReturnLengthOPTIONAL);
[NtQueryObject]
1=HANDLE Handle
2=OBJECT_INFORMATION_CLASS ObjectInformationClass
3=PVOID ObjectInformation
4=ULONG ObjectInformationLength
5=PULONG ReturnLength
ParamCount=5
@=NtQueryObject(HANDLE Handle, OBJECT_INFORMATION_CLASS ObjectInformationClass, PVOID ObjectInformation, ULONG ObjectInformationLength, PULONG ReturnLength);
[NtQuerySystemInformation]
1=SYSTEM_INFORMATION_CLASS SystemInformationClass
2=OUT PVOIDSystemInformation
3=ULONG SystemInformationLength
4=OUT PULONGReturnLengthOPTIONAL
ParamCount=4
@=NtQuerySystemInformation(SYSTEM_INFORMATION_CLASS SystemInformationClass, OUT PVOIDSystemInformation, ULONG SystemInformationLength, OUT PULONGReturnLengthOPTIONAL);
[NtQuerySystemTime]
1=SystemTime

ParamCount=1
@=NtQuerySystemTime(SystemTime
);
[RtlLocalTimeToSystemTime]
1=PLARGE_INTEGER LocalTime
2=SystemTime

ParamCount=2
@=RtlLocalTimeToSystemTime(PLARGE_INTEGER LocalTime, SystemTime
);
[RtlTimeToSecondsSince1970]
1=Time
2=PULONG ElapsedSeconds
ParamCount=2
@=RtlTimeToSecondsSince1970(Time, PULONG ElapsedSeconds);
[RtlFreeAnsiString]
1=AnsiString

ParamCount=1
@=RtlFreeAnsiString(AnsiString
);
[RtlFreeUnicodeString]
1=UnicodeString

ParamCount=1
@=RtlFreeUnicodeString(UnicodeString
);
[RtlFreeOemString]
1=OemString

ParamCount=1
@=RtlFreeOemString(OemString
);
[RtlInitString]
1=PSTRING DestinationString
2=PCSZ SourceString
ParamCount=2
@=RtlInitString(PSTRING DestinationString, PCSZ SourceString);
[RtlInitAnsiString]
1=DestinationString
2=PCSZ SourceString
ParamCount=2
@=RtlInitAnsiString(DestinationString, PCSZ SourceString);
[RtlInitUnicodeString]
1=DestinationString
2=PCWSTR SourceString
ParamCount=2
@=RtlInitUnicodeString(DestinationString, PCWSTR SourceString);
[RtlAnsiStringToUnicodeString]
1=DestinationString
2=SourceString
3=BOOLEAN AllocateDestinationString
ParamCount=3
@=RtlAnsiStringToUnicodeString(DestinationString, SourceString, BOOLEAN AllocateDestinationString);
[RtlUnicodeStringToAnsiString]
1=DestinationString
2=SourceString
3=BOOLEAN AllocateDestinationString
ParamCount=3
@=RtlUnicodeStringToAnsiString(DestinationString, SourceString, BOOLEAN AllocateDestinationString);
[RtlUnicodeStringToOemString]
1=DestinationString
2=SourceString
3=BOOLEAN AllocateDestinationString
ParamCount=3
@=RtlUnicodeStringToOemString(DestinationString, SourceString, BOOLEAN AllocateDestinationString);
[RtlUnicodeToMultiByteSize]
1=PULONG BytesInMultiByteString
2=PWCH UnicodeString
3=ULONG BytesInUnicodeString
ParamCount=3
@=RtlUnicodeToMultiByteSize(PULONG BytesInMultiByteString, PWCH UnicodeString, ULONG BytesInUnicodeString);
[RtlCharToInteger]
1=PCSZ String
2=ULONG Base
3=PULONG Value
ParamCount=3
@=RtlCharToInteger(PCSZ String, ULONG Base, PULONG Value);
[RtlConvertSidToUnicodeString]
1=UnicodeString
2=PSID Sid
3=BOOLEAN AllocateDestinationString
ParamCount=3
@=RtlConvertSidToUnicodeString(UnicodeString, PSID Sid, BOOLEAN AllocateDestinationString);
[RtlUniform]
1=PULONG Seed
ParamCount=1
@=RtlUniform(PULONG Seed);
[HalDisplayString]
1=PCHAR String
ParamCount=1
@=HalDisplayString(PCHAR String);
[HalQueryRealTimeClock]
1=OUT PTIME_FIELDSTimeFields
ParamCount=1
@=HalQueryRealTimeClock(OUT PTIME_FIELDSTimeFields);
[HalSetRealTimeClock]
1=PTIME_FIELDS TimeFields
ParamCount=1
@=HalSetRealTimeClock(PTIME_FIELDS TimeFields);
[RtlGetNtGlobalFlags]
ParamCount=0
@=RtlGetNtGlobalFlags();
[RtlImageNtHeader]
1=PVOID BaseAddress
ParamCount=1
@=RtlImageNtHeader(PVOID BaseAddress);
[RtlSetSaclSecurityDescriptor]
1=OUT PSECURITY_DESCRIPTORSecurityDescriptor
2=BOOLEAN SaclPresent
3=PACL Sacl
4=BOOLEAN SaclDefaulted
ParamCount=4
@=RtlSetSaclSecurityDescriptor(OUT PSECURITY_DESCRIPTORSecurityDescriptor, BOOLEAN SaclPresent, PACL Sacl, BOOLEAN SaclDefaulted);
[RtlMoveMemory]
1=VOID UNALIGNED *Destination
2=VOID UNALIGNED *Source
3=SIZE_T Length
ParamCount=3
@=RtlMoveMemory(VOID UNALIGNED *Destination, VOID UNALIGNED *Source, SIZE_T Length);
[RtlFillMemory]
1=VOID UNALIGNED *Destination
2=SIZE_T Length
3=UCHAR Fill
ParamCount=3
@=RtlFillMemory(VOID UNALIGNED *Destination, SIZE_T Length, UCHAR Fill);
[RtlZeroMemory]
1=VOID UNALIGNED *Destination
2=SIZE_T Length
ParamCount=2
@=RtlZeroMemory(VOID UNALIGNED *Destination, SIZE_T Length);
[ZwAdjustPrivilegesToken]
1=HANDLE TokenHandle
2=BOOLEAN DisableAllPrivileges
3=PTOKEN_PRIVILEGES NewState
4=ULONG BufferLength
5=PreviousState OPTIONAL
6=OUT PULONGReturnLength
ParamCount=6
@=ZwAdjustPrivilegesToken(HANDLE TokenHandle, BOOLEAN DisableAllPrivileges, PTOKEN_PRIVILEGES NewState, ULONG BufferLength, PreviousState OPTIONAL, OUT PULONGReturnLength);
[ZwAlertThread]
1=HANDLE ThreadHandle
ParamCount=1
@=ZwAlertThread(HANDLE ThreadHandle);
[ZwAccessCheckAndAuditAlarm]
1=PUNICODE_STRING SubsystemName
2=PVOID HandleId
3=PUNICODE_STRING ObjectTypeName
4=PUNICODE_STRING ObjectName
5=PSECURITY_DESCRIPTOR SecurityDescriptor
6=ACCESS_MASK DesiredAccess
7=PGENERIC_MAPPING GenericMapping
8=BOOLEAN ObjectCreation
9=GrantedAccess
10=OUT PBOOLEANAccessStatus
11=OUT PBOOLEANGenerateOnClose
ParamCount=11
@=ZwAccessCheckAndAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, ACCESS_MASK DesiredAccess, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, GrantedAccess, OUT PBOOLEANAccessStatus, OUT PBOOLEANGenerateOnClose);
[ZwCancelIoFile]
1=HANDLE FileHandle
2=IoStatusBlock

ParamCount=2
@=ZwCancelIoFile(HANDLE FileHandle, IoStatusBlock
);
[ZwClearEvent]
1=HANDLE EventHandle
ParamCount=1
@=ZwClearEvent(HANDLE EventHandle);
[ZwConnectPort]
1=OUT PHANDLEClientPortHandle
2=PUNICODE_STRING ServerPortName
3=PSECURITY_QUALITY_OF_SERVICE SecurityQos
4=OUT PLPC_SECTION_WRITEClientSharedMemoryOPTIONAL
5=OUT PLPC_SECTION_READServerSharedMemoryOPTIONAL
6=OUT PULONGMaximumMessageLengthOPTIONAL
7=OUT PVOIDConnectionInfoOPTIONAL
8=OUT PULONGConnectionInfoLengthOPTIONAL
ParamCount=8
@=ZwConnectPort(OUT PHANDLEClientPortHandle, PUNICODE_STRING ServerPortName, PSECURITY_QUALITY_OF_SERVICE SecurityQos, OUT PLPC_SECTION_WRITEClientSharedMemoryOPTIONAL, OUT PLPC_SECTION_READServerSharedMemoryOPTIONAL, OUT PULONGMaximumMessageLengthOPTIONAL, OUT PVOIDConnectionInfoOPTIONAL, OUT PULONGConnectionInfoLengthOPTIONAL);
[ZwCloseObjectAuditAlarm]
1=PUNICODE_STRING SubsystemName
2=PVOID HandleId
3=BOOLEAN GenerateOnClose
ParamCount=3
@=ZwCloseObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, BOOLEAN GenerateOnClose);
[ZwCreateSymbolicLinkObject]
1=OUT PHANDLESymbolicLinkHandle
2=ACCESS_MASK DesiredAccess
3=POBJECT_ATTRIBUTES ObjectAttributes
4=PUNICODE_STRING TargetName
ParamCount=4
@=ZwCreateSymbolicLinkObject(OUT PHANDLESymbolicLinkHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PUNICODE_STRING TargetName);
[ZwFlushInstructionCache]
1=HANDLE ProcessHandle
2=PVOID BaseAddressOPTIONAL
3=ULONG FlushSize
ParamCount=3
@=ZwFlushInstructionCache(HANDLE ProcessHandle, PVOID BaseAddressOPTIONAL, ULONG FlushSize);
[ZwInitiatePowerAction]
1=POWER_ACTION SystemAction
2=SYSTEM_POWER_STATE MinSystemState
3=ULONG Flags
4=BOOLEAN Asynchronous
ParamCount=4
@=ZwInitiatePowerAction(POWER_ACTION SystemAction, SYSTEM_POWER_STATE MinSystemState, ULONG Flags, BOOLEAN Asynchronous);
[ZwLoadKey]
1=POBJECT_ATTRIBUTES KeyObjectAttributes
2=POBJECT_ATTRIBUTES FileObjectAttributes
ParamCount=2
@=ZwLoadKey(POBJECT_ATTRIBUTES KeyObjectAttributes, POBJECT_ATTRIBUTES FileObjectAttributes);
[ZwOpenProcessToken]
1=HANDLE ProcessHandle
2=ACCESS_MASK DesiredAccess
3=OUT PHANDLETokenHandle
ParamCount=3
@=ZwOpenProcessToken(HANDLE ProcessHandle, ACCESS_MASK DesiredAccess, OUT PHANDLETokenHandle);
[ZwOpenThread]
1=OUT PHANDLEThreadHandle
2=ACCESS_MASK DesiredAccess
3=POBJECT_ATTRIBUTES ObjectAttributes
4=PCLIENT_ID ClientId
ParamCount=4
@=ZwOpenThread(OUT PHANDLEThreadHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PCLIENT_ID ClientId);
[ZwOpenThreadToken]
1=HANDLE ThreadHandle
2=ACCESS_MASK DesiredAccess
3=BOOLEAN OpenAsSelf
4=OUT PHANDLETokenHandle
ParamCount=4
@=ZwOpenThreadToken(HANDLE ThreadHandle, ACCESS_MASK DesiredAccess, BOOLEAN OpenAsSelf, OUT PHANDLETokenHandle);
[ZwPulseEvent]
1=HANDLE EventHandle
2=OUT PULONGPreviousStateOPTIONAL
ParamCount=2
@=ZwPulseEvent(HANDLE EventHandle, OUT PULONGPreviousStateOPTIONAL);
[ZwQueryDefaultLocale]
1=BOOLEAN ThreadOrSystem
2=OUT PLCIDLocale
ParamCount=2
@=ZwQueryDefaultLocale(BOOLEAN ThreadOrSystem, OUT PLCIDLocale);
[ZwQueryDefaultUILanguage]
1=OUT LANGID*LanguageId
ParamCount=1
@=ZwQueryDefaultUILanguage(OUT LANGID*LanguageId);
[ZwQueryDirectoryObject]
1=HANDLE DirectoryHandle
2=OUT PVOIDBuffer
3=ULONG Length
4=BOOLEAN ReturnSingleEntry
5=BOOLEAN RestartScan
6=OUT PULONGContext
7=OUT PULONGReturnLengthOPTIONAL
ParamCount=7
@=ZwQueryDirectoryObject(HANDLE DirectoryHandle, OUT PVOIDBuffer, ULONG Length, BOOLEAN ReturnSingleEntry, BOOLEAN RestartScan, OUT PULONGContext, OUT PULONGReturnLengthOPTIONAL);
[ZwQueryInformationProcess]
1=HANDLE ProcessHandle
2=PROCESSINFOCLASS ProcessInformationClass
3=OUT PVOIDProcessInformation
4=ULONG ProcessInformationLength
5=OUT PULONGReturnLengthOPTIONAL
ParamCount=5
@=ZwQueryInformationProcess(HANDLE ProcessHandle, PROCESSINFOCLASS ProcessInformationClass, OUT PVOIDProcessInformation, ULONG ProcessInformationLength, OUT PULONGReturnLengthOPTIONAL);
[ZwQueryInformationThread]
1=HANDLE ThreadHandle
2=THREADINFOCLASS ThreadInformationClass
3=OUT PVOIDThreadInformation
4=ULONG ThreadInformationLength
5=OUT PULONGReturnLengthOPTIONAL
ParamCount=5
@=ZwQueryInformationThread(HANDLE ThreadHandle, THREADINFOCLASS ThreadInformationClass, OUT PVOIDThreadInformation, ULONG ThreadInformationLength, OUT PULONGReturnLengthOPTIONAL);
[ZwQueryInstallUILanguage]
1=OUT LANGID*LanguageId
ParamCount=1
@=ZwQueryInstallUILanguage(OUT LANGID*LanguageId);
[ZwQuerySection]
1=HANDLE SectionHandle
2=SECTION_INFORMATION_CLASS SectionInformationClass
3=OUT PVOIDSectionInformation
4=ULONG SectionInformationLength
5=OUT PULONGResultLengthOPTIONAL
ParamCount=5
@=ZwQuerySection(HANDLE SectionHandle, SECTION_INFORMATION_CLASS SectionInformationClass, OUT PVOIDSectionInformation, ULONG SectionInformationLength, OUT PULONGResultLengthOPTIONAL);
[ZwQuerySystemInformation]
1=SYSTEM_INFORMATION_CLASS SystemInformationClass
2=OUT PVOIDSystemInformation
3=ULONG Length
4=OUT PULONGReturnLength
ParamCount=4
@=ZwQuerySystemInformation(SYSTEM_INFORMATION_CLASS SystemInformationClass, OUT PVOIDSystemInformation, ULONG Length, OUT PULONGReturnLength);
[ZwReplaceKey]
1=POBJECT_ATTRIBUTES NewFileObjectAttributes
2=HANDLE KeyHandle
3=POBJECT_ATTRIBUTES OldFileObjectAttributes
ParamCount=3
@=ZwReplaceKey(POBJECT_ATTRIBUTES NewFileObjectAttributes, HANDLE KeyHandle, POBJECT_ATTRIBUTES OldFileObjectAttributes);
[ZwRequestWaitReplyPort]
1=HANDLE PortHandle
2=PLPC_MESSAGE Request
3=Reply

ParamCount=3
@=ZwRequestWaitReplyPort(HANDLE PortHandle, PLPC_MESSAGE Request, Reply
);
[ZwResetEvent]
1=HANDLE EventHandle
2=OUT PULONGPreviousStateOPTIONAL
ParamCount=2
@=ZwResetEvent(HANDLE EventHandle, OUT PULONGPreviousStateOPTIONAL);
[ZwRestoreKey]
1=HANDLE KeyHandle
2=HANDLE FileHandle
3=ULONG Flags
ParamCount=3
@=ZwRestoreKey(HANDLE KeyHandle, HANDLE FileHandle, ULONG Flags);
[ZwSaveKey]
1=HANDLE KeyHandle
2=HANDLE FileHandle
ParamCount=2
@=ZwSaveKey(HANDLE KeyHandle, HANDLE FileHandle);
[ZwSetDefaultLocale]
1=BOOLEAN ThreadOrSystem
2=LCID Locale
ParamCount=2
@=ZwSetDefaultLocale(BOOLEAN ThreadOrSystem, LCID Locale);
[ZwSetDefaultUILanguage]
1=LANGID LanguageId
ParamCount=1
@=ZwSetDefaultUILanguage(LANGID LanguageId);
[ZwSetInformationObject]
1=HANDLE ObjectHandle
2=OBJECT_INFO_CLASS ObjectInformationClass
3=PVOID ObjectInformation
4=ULONG ObjectInformationLength
ParamCount=4
@=ZwSetInformationObject(HANDLE ObjectHandle, OBJECT_INFO_CLASS ObjectInformationClass, PVOID ObjectInformation, ULONG ObjectInformationLength);
[ZwSetInformationProcess]
1=HANDLE ProcessHandle
2=PROCESSINFOCLASS ProcessInformationClass
3=PVOID ProcessInformation
4=ULONG ProcessInformationLength
ParamCount=4
@=ZwSetInformationProcess(HANDLE ProcessHandle, PROCESSINFOCLASS ProcessInformationClass, PVOID ProcessInformation, ULONG ProcessInformationLength);
[ZwSetSystemInformation]
1=SYSTEM_INFORMATION_CLASS SystemInformationClass
2=PVOID SystemInformation
3=ULONG Length
ParamCount=3
@=ZwSetSystemInformation(SYSTEM_INFORMATION_CLASS SystemInformationClass, PVOID SystemInformation, ULONG Length);
[ZwSetSystemTime]
1=PLARGE_INTEGER NewTime
2=OldTime OPTIONAL
ParamCount=2
@=ZwSetSystemTime(PLARGE_INTEGER NewTime, OldTime OPTIONAL);
[ZwUnloadKey]
1=POBJECT_ATTRIBUTES KeyObjectAttributes
ParamCount=1
@=ZwUnloadKey(POBJECT_ATTRIBUTES KeyObjectAttributes);
[ZwWaitForMultipleObjects]
1=ULONG HandleCount
2=PHANDLE Handles
3=WAIT_TYPE WaitType
4=BOOLEAN Alertable
5=PLARGE_INTEGER TimeoutOPTIONAL
ParamCount=5
@=ZwWaitForMultipleObjects(ULONG HandleCount, PHANDLE Handles, WAIT_TYPE WaitType, BOOLEAN Alertable, PLARGE_INTEGER TimeoutOPTIONAL);
[ZwYieldExecution]
ParamCount=0
@=ZwYieldExecution();
[RtlCreateUnicodeString]
1=OUT_PUNICODE_STRING DestinationString
2=IN_PCWSTR SourceString
ParamCount=2
@=RtlCreateUnicodeString
[RtlInitEmptyUnicodeString]
1=__OUT_PUNICODE_STRING UnicodeString
2=__bcount_opt PWCHAR
3=Buffer __IN_USHORT
ParamCount=3
@=RtlInitEmptyUnicodeString
[RtlInitEmptyAnsiString]
1=__OUT_PANSI_STRING AnsiString
2=PCHAR Buffer
3=__IN_USHORT BufferSize
ParamCount=3
@=RtlInitEmptyAnsiString
[RtlInitUnicodeStringLen]
1=__OUT_PUNICODE_STRING UnicodeString
2=PWCHAR Buffer
3=__IN_USHORT ToUseChars
ParamCount=3
@=RtlInitUnicodeStringLen
[RtlInitAnsiStringLen]
1=__OUT_PANSI_STRING AnsiString
2=PCHAR Buffer
3=__IN_USHORT ToUseChars
ParamCount=3
@=RtlInitAnsiStringLen
[RtlHashUnicodeString]
1=__IN_PCUNICODE_STRING String
2=__IN_BOOLEAN CaseInSensitive
3=__IN_ULONG HashAlgorithm
4=__OUT_PULONG HashValue
ParamCount=4
@=RtlHashUnicodeString
[RtlGetFullPathName_U]
1=const WCHAR*
2=name ULONG
3=size WCHAR*
4=buffer WCHAR**
ParamCount=4
@=RtlGetFullPathName_U
[NtSetEvent]
1=IN_HANDLE EventHandle
2=OUT_PLONG PreviousState
ParamCount=2
@=NtSetEvent
[NtCreateEvent]
1=OUT_PHANDLE EventHandle
2=IN_ACCESS_MASK DesiredAccess
3=IN_POBJECT_ATTRIBUTES ObjectAttributes
4=IN_EVENT_TYPE EventType
5=IN_BOOLEAN InitialState
ParamCount=5
@=NtCreateEvent
[NtWriteFile]
1=IN_HANDLE FileHandle
2=IN_HANDLE Event
3=IN_PIO_APC_ROUTINE ApcRoutine
4=IN_PVOID ApcContext
5=OUT_PIO_STATUS_BLOCK IoStatusBlock
6=IN_PVOID Buffer
7=IN_ULONG Length
8=IN_PLARGE_INTEGER ByteOffset
9=IN_PULONG Key
ParamCount=9
@=NtWriteFile
[NtReadFile]
1=IN_HANDLE FileHandle
2=IN_HANDLE Event
3=IN_PIO_APC_ROUTINE ApcRoutine
4=IN_PVOID ApcContext
5=OUT_PIO_STATUS_BLOCK IoStatusBlock
6=OUT_PVOID Buffer
7=IN_ULONG Length
8=IN_PLARGE_INTEGER ByteOffset
9=IN_PULONG Key
ParamCount=9
@=NtReadFile
[NtTerminateThread]
1=IN_HANDLE ThreadHandle
2=IN_NTSTATUS ExitStatus NTSYSAPI NTSTATUS NTAPI
3=NtAlertThread IN_HANDLE
ParamCount=3
@=NtTerminateThread
[NtResumeThread]
1=IN_HANDLE ThreadHandle
2=OUT_PULONG SuspendCount
ParamCount=2
@=NtResumeThread
[NtTerminateProcess]
1=IN_HANDLE ProcessHandle
ParamCount=1
@=NtTerminateProcess
[NtRaiseHardError]
1=IN_NTSTATUS ErrorStatus IN_ULONG
2=NumberOfParameters IN_ULONG
3=UnicodeStringParameterMask IN_PULONG_PTR
4=Parameters IN_HARDERROR_RESPONSE_OPTION
5=ValidResponseOptions OUT_PHARDERROR_RESPONSE_OPTION
ParamCount=5
@=NtRaiseHardError
[NtQueryVirtualMemory]
1=IN_HANDLE ProcessHandle
2=IN_PVOID BaseAddress
3=IN_MEMORY_INFORMATION_CLASS MemoryInformationClass
4=OUT_PVOID Buffer
5=IN_ULONG Length
6=OUT_PULONG ResultLength
7=NTSYSAPI NTSTATUS NTAPI NtLockVirtualMemory
8=IN_HANDLE ProcessHandle
9=IN_OUT_PVOID* BaseAddress
10=IN_PSIZE_T RegionSize
11=IN_MEMORY_MAP_TYPE MapType
ParamCount=11
@=NtQueryVirtualMemory
[NtAllocateVirtualMemory]
1=IN_HANDLE ProcessHandle
2=IN_OUT_PVOID *BaseAddress
3=IN_ULONG ZeroBits
4=IN_OUT_PSIZE_T RegionSize
5=IN_ULONG AllocationType
6=IN_ULONG Protect
7=NTSYSAPI NTSTATUS NTAPI NtFreeVirtualMemory
8=IN_HANDLE ProcessHandle
9=IN_OUT_PVOID *BaseAddress
10=IN_OUT_PSIZE_T RegionSize
11=IN_ULONG FreeType
ParamCount=11
@=NtAllocateVirtualMemory
[NtWriteVirtualMemory]
1=IN_HANDLE ProcessHandle
2=OUT_PVOID BaseAddress
3=IN_PVOID Buffer
4=IN_ULONG BufferSize
5=OUT_PULONG NumberOfBytesWritten
ParamCount=5
@=NtWriteVirtualMemory
[NtQueueApcThread]
1=IN_HANDLE ThreadHandle
2=IN_PPS_APC_ROUTINE ApcRoutine
3=IN_PVOID ApcArgument1
4=IN_PVOID ApcArgument2
5=IN_PVOID ApcArgument3
ParamCount=5
@=NtQueueApcThread
[RtlCompactHeap]
1=IN_HANDLE hHeap
2=IN_ULONG flags
ParamCount=2
@=RtlCompactHeap
[RtlDestroyHeap]
1=IN_HANDLE hHeap
ParamCount=1
@=RtlDestroyHeap
[RtlEnterCriticalSection]
1=IN_LPCRITICAL_SECTION pSection
ParamCount=1
@=RtlEnterCriticalSection
[RtlLeaveCriticalSection]
1=IN_LPCRITICAL_SECTION pSection
ParamCount=1
@=RtlLeaveCriticalSection
[RtlDeleteCriticalSection]
1=IN_LPCRITICAL_SECTION pSection
ParamCount=1
@=RtlDeleteCriticalSection
[RtlSetLastWin32Error]
1=IN_ULONG error
ParamCount=1
@=RtlSetLastWin32Error
[NtQueryFullAttributesFile]
1=IN_POBJECT_ATTRIBUTES pObjAttrs
2=IN_OUT_PFILE_NETWORK_OPEN_INFORMATION pNetInf
ParamCount=2
@=NtQueryFullAttributesFile
[NtSetInformationFile]
1=IN_HANDLE FileHandle
2=OUT_PIO_STATUS_BLOCK IoStatusBlock
3=IN_PVOID FileInformation
4=IN_ULONG Length
5=IN_FILE_INFORMATION_CLASS FileInformationClass
ParamCount=5
@=NtSetInformationFile
[NtQueryInformationFile]
1=IN_HANDLE FileHandle
2=OUT_PIO_STATUS_BLOCK IoStatusBlock
3=IN_PVOID FileInformation
4=IN_ULONG Length
5=IN_FILE_INFORMATION_CLASS FileInformationClass
ParamCount=5
@=NtQueryInformationFile
[NtCreateDirectoryObject]
1=OUT_PHANDLE DirectoryHandle
2=IN_ACCESS_MASK DesiredAccess
3=IN_POBJECT_ATTRIBUTES ObjectAttributes
ParamCount=3
@=NtCreateDirectoryObject
[NtOpenDirectoryObject]
1=OUT_PHANDLE DirectoryHandle
2=IN_ACCESS_MASK DesiredAccess
3=IN_POBJECT_ATTRIBUTES ObjectAttributes
ParamCount=3
@=NtOpenDirectoryObject
[NtQueryDirectoryObject]
1=HANDLE DirectoryHandle
2=PVOID Buffer
3=ULONG Length
4=BOOLEAN ReturnSingleEntry
5=BOOLEAN RestartScan
6=PULONG Context
7=PULONG ReturnLength
ParamCount=7
@=NtQueryDirectoryObject
[IN_OUT_PUNICODE_STRING]
1=DestinationString IN_PCANSI_STRING
2=SourceString IN_BOOLEAN
ParamCount=2
@=IN_OUT_PUNICODE_STRING
[RtlCreateProcessParameters]
1=OUT_PPROCESS_PARAMETERS_VISTA *ProcessParameters
2=IN_PUNICODE_STRING ImageFile
3=IN_PUNICODE_STRING DllPath
4=IN_PUNICODE_STRING CurrentDirectory
5=IN_PUNICODE_STRING CommandLine
6=IN_ULONG CreationFlags
7=IN_PUNICODE_STRING WindowTitle
8=IN_PUNICODE_STRING Desktop
9=IN_PUNICODE_STRING Reserved
10=IN_PUNICODE_STRING Reserved2
ParamCount=10
@=RtlCreateProcessParameters
[RtlDestroyProcessParameters]
1=IN_PPROCESS_PARAMETERS_VISTA ProcessParameters
ParamCount=1
@=RtlDestroyProcessParameters
[RtlDosPathNameToNtPathName_U]
1=IN_PCWSTR DosName
2=OUT_PUNICODE_STRING NtName
3=OUT_PCWSTR *DosFilePath
4=OUT_PUNICODE_STRING NtFilePath
ParamCount=4
@=RtlDosPathNameToNtPathName_U
[RtlNtPathNameToDosPathName]
1=IN_ULONG Flags
2=IN_OUT_PUNICODE_STRING Path
3=OUT_PULONG Disposition
4=IN_OUT_ PWSTR*
ParamCount=4
@=RtlNtPathNameToDosPathName
[RtlImageDirectoryEntryToData]
1=__IN_PVOID pBaseAddress
2=__IN_BOOLEAN bImageLoaded
3=__IN_ULONG dwDirectory
4=__OUT_PULONG pSize
ParamCount=4
@=RtlImageDirectoryEntryToData
[RtlImageDirectoryEntryToDataEx]
1=__IN_PVOID pBaseAddress
2=__IN_BOOLEAN bImageLoaded
3=__IN_ULONG dwDirectory
4=__OUT_PULONG pSize
5=__out_opt PIMAGE_SECTION_HEADER
ParamCount=5
@=RtlImageDirectoryEntryToDataEx
[NtCreateProcess]
1=OUT_PHANDLE ProcessHandle
2=IN_ACCESS_MASK DesiredAccess
3=IN_POBJECT_ATTRIBUTES ObjectAttributes
4=IN_HANDLE InheritFromProcessHandle
5=IN_BOOLEAN InheritHandles
6=IN_HANDLE SectionHandle
7=IN_HANDLE DebugPort
8=IN_HANDLE ExceptionPort
ParamCount=8
@=NtCreateProcess
[NtCreatePort]
1=OUT_PHANDLE PortHandle
2=IN_POBJECT_ATTRIBUTES ObjectAttributes
3=IN_ULONG MaxDataSize
4=IN_ULONG MaxMessageSize
5=IN_ULONG Reserved
ParamCount=5
@=NtCreatePort
[NtCreateWaitablePort]
1=OUT_PHANDLE PortHandle
2=IN_POBJECT_ATTRIBUTES ObjectAttributes
3=IN_ULONG MaxDataSize
4=IN_ULONG MaxMessageSize
5=IN_ULONG Reserved
ParamCount=5
@=NtCreateWaitablePort
[NtReplyWaitReceivePort]
1=IN_HANDLE PortHandle
2=OUT_PULONG PortIdentifier
3=IN_PPORT_MESSAGE ReplyMessage
4=OUT_PPORT_MESSAGE Message
ParamCount=4
@=NtReplyWaitReceivePort
[NtReplyPort]
1=IN_HANDLE PortHandle
2=IN_PPORT_MESSAGE ReplyMessage
ParamCount=2
@=NtReplyPort
[NtCreateThread]
1=OUT_PHANDLE ThreadHandle
2=IN_ACCESS_MASK DesiredAccess
3=IN_POBJECT_ATTRIBUTES ObjectAttributes
4=IN_HANDLE ProcessHandle
5=OUT_PCLIENT_ID ClientId
6=IN_PCONTEXT ThreadContext
7=IN_PINITIAL_TEB UserStack
8=IN_BOOLEAN CreateSuspended
ParamCount=8
@=NtCreateThread
[NtCreateSection]
1=__OUT_PHANDLE SectionHandle
2=__IN_ACCESS_MASK DesiredAccess
3=__in_opt POBJECT_ATTRIBUTES
4=ObjectAttributes __in_opt
5=PLARGE_INTEGER MaximumSize
6=__IN_ULONG SectionPageProtection
7=__IN_ULONG AllocationAttributes
8=__in_opt HANDLE
ParamCount=8
@=NtCreateSection
[NtOpenSection]
1=__OUT_PHANDLE SectionHandle
2=__IN_ACCESS_MASK DesiredAccess
3=__IN_POBJECT_ATTRIBUTES ObjectAttributes
ParamCount=3
@=NtOpenSection
[NtMapViewOfSection]
1=__IN_HANDLE SectionHandle
2=__IN_HANDLE ProcessHandle
3=__inOUT_PVOID *BaseAddress
4=__IN_ULONG_PTR ZeroBits
5=__IN_SIZE_T CommitSize
6=__inout_opt PLARGE_INTEGER
7=SectionOffset __inOUT_PSIZE_T
8=ViewSize __IN_SECTION_INHERIT
9=InheritDisposition __IN_ULONG
10=AllocationType __IN_ULONG
ParamCount=10
@=NtMapViewOfSection
[NtUnmapViewOfSection]
1=__IN_HANDLE ProcessHandle
2=__in_opt PVOID
ParamCount=2
@=NtUnmapViewOfSection
[LdrLoadDll]
1=IN_PWCHAR SearchPath
2=IN_PULONG Flags
3=IN_PUNICODE_STRING ModuleFileName
4=OUT_HMODULE *ModuleHandle
5=NTSYSAPI NTSTATUS NTAPI LdrUnloadDll
6=IN_HANDLE ModuleHandle
ParamCount=6
@=LdrLoadDll
[LdrGetLoadDll]
1=IN_PWCHAR SearchPath
2=IN_PULONG Flags
3=IN_PUNICODE_STRING ModuleFileName
4=OUT_HMODULE *ModuleHandle
5=NTSYSAPI NTSTATUS NTAPI LdrGetProcedureAddress
6=IN_HMODULE ModuleHandle
7=IN_PANSI_STRING FunctionName
8=IN_WORD Oridinal
9=OUT_PVOID *FunctionAddress
10=NTSTATUS NTAPI NtQueryInformationProcess
11=HANDLE ProcessHandle
12=PROCESSINFOCLASS ProcessInformationClass
13=PVOID ProcessInformation
14=ULONG ProcessInformationLength
15=PULONG ReturnLength
ParamCount=15
@=LdrGetLoadDll
[NtSetInformationProcess]
1=HANDLE ProcessHandle
2=PROCESSINFOCLASS ProcessInformationClass
3=PVOID ProcessInformation
4=ULONG ProcessInformationLength
ParamCount=4
@=NtSetInformationProcess
[RtlGetCurrentPeb]
ParamCount=0
@=RtlGetCurrentPeb
[NtDuplicateObject]
1=__IN_HANDLE SourceProcessHandle
2=__IN_HANDLE SourceHandle
3=__in_opt HANDLE
4=TargetProcessHandle __out_opt
5=PHANDLE TargetHandle
6=__IN_ACCESS_MASK DesiredAccess
7=__IN_ULONG HandleAttributes
8=__IN_ULONG Options NTAPI
9=RTL_AVL_COMPARE_ROUTINE __IN_struct
10=_RTL_AVL_TABLE *Table
11=__IN_PVOID FirstStruct
12=__IN_PVOID SecondStruct
ParamCount=12
@=NtDuplicateObject
[RTL_AVL_ALLOCATE_ROUTINE]
1=__IN_struct _RTL_AVL_TABLE
2=*Table __IN_CLONG
ParamCount=2
@=RTL_AVL_ALLOCATE_ROUTINE
[RTL_AVL_FREE_ROUTINE]
1=__IN_struct_RTL_AVL_TABLE *Table
2=PVOID Buffer
ParamCount=2
@=RTL_AVL_FREE_ROUTINE
[RTL_AVL_MATCH_FUNCTION]
1=__IN_struct _RTL_AVL_TABLE
2=*Table __IN_PVOID
3=UserData __IN_PVOID
ParamCount=3
@=RTL_AVL_MATCH_FUNCTION
[RtlInitializeGenericTableAvl]
1=__OUT_PRTL_AVL_TABLE Table
2=__IN_PRTL_AVL_COMPARE_ROUTINE CompareRoutine
3=__IN_PRTL_AVL_ALLOCATE_ROUTINE AllocateRoutine
4=__IN_PRTL_AVL_FREE_ROUTINE FreeRoutine
5=__in_opt PVOID
ParamCount=5
@=RtlInitializeGenericTableAvl
[RtlInsertElementGenericTableAvl]
1=__IN_PRTL_AVL_TABLE Table
2=PVOID Buffer
3=__IN_CLONG BufferSize
4=__out_opt PBOOLEAN
ParamCount=4
@=RtlInsertElementGenericTableAvl
[RtlInsertElementGenericTableFullAvl]
1=__IN_PRTL_AVL_TABLE Table
2=PVOID Buffer
3=__IN_CLONG BufferSize
4=__out_opt PBOOLEAN
5=NewElement __IN_PVOID
6=NodeOrParent __IN_TABLE_SEARCH_RESULT
ParamCount=6
@=RtlInsertElementGenericTableFullAvl
[RtlDeleteElementGenericTableAvl]
1=__IN_PRTL_AVL_TABLE Table
2=__IN_PVOID Buffer
ParamCount=2
@=RtlDeleteElementGenericTableAvl
[RtlLookupElementGenericTableAvl]
1=__IN_PRTL_AVL_TABLE Table
2=__IN_PVOID Buffer
ParamCount=2
@=RtlLookupElementGenericTableAvl
[RtlLookupElementGenericTableFullAvl]
1=__IN_PRTL_AVL_TABLE Table
2=__IN_PVOID Buffer
3=__OUT_PVOID *NodeOrParent
4=__OUT_TABLE_SEARCH_RESULT *SearchResult
ParamCount=4
@=RtlLookupElementGenericTableFullAvl
[RtlEnumerateGenericTableAvl]
1=__IN_PRTL_AVL_TABLE Table
2=__IN_BOOLEAN Restart
ParamCount=2
@=RtlEnumerateGenericTableAvl
[RtlEnumerateGenericTableWithoutSplayingAvl]
1=__IN_PRTL_AVL_TABLE Table
2=__inOUT_PVOID *RestartKey
ParamCount=2
@=RtlEnumerateGenericTableWithoutSplayingAvl
[RtlLookupFirstMatchingElementGenericTableAvl]
1=__IN_PRTL_AVL_TABLE Table
2=__IN_PVOID Buffer
3=__OUT_PVOID *RestartKey
ParamCount=3
@=RtlLookupFirstMatchingElementGenericTableAvl
[RtlEnumerateGenericTableLikeADirectory]
1=__IN_PRTL_AVL_TABLE Table
2=__in_opt PRTL_AVL_MATCH_FUNCTION
3=MatchFunction __in_opt
4=PVOID MatchData
5=__IN_ULONG NextFlag
6=__inOUT_PVOID *RestartKey
7=__inOUT_PULONG DeleteCount
8=__IN_PVOID Buffer
ParamCount=8
@=RtlEnumerateGenericTableLikeADirectory
[RtlGetElementGenericTableAvl]
1=__IN_PRTL_AVL_TABLE Table
2=__IN_ULONG I
ParamCount=2
@=RtlGetElementGenericTableAvl
[RtlNumberGenericTableElementsAvl]
1=__IN_PRTL_AVL_TABLE Table
ParamCount=1
@=RtlNumberGenericTableElementsAvl
[RtlIsGenericTableEmptyAvl]
1=__IN_PRTL_AVL_TABLE Table NTAPI
2=RTL_GENERIC_COMPARE_ROUTINE __IN_struct
3=_RTL_GENERIC_TABLE *Table
4=__IN_PVOID FirstStruct
5=__IN_PVOID SecondStruct
ParamCount=5
@=RtlIsGenericTableEmptyAvl
[RTL_GENERIC_ALLOCATE_ROUTINE]
1=__IN_struct _RTL_GENERIC_TABLE
2=*Table __IN_CLONG
ParamCount=2
@=RTL_GENERIC_ALLOCATE_ROUTINE
[RTL_GENERIC_FREE_ROUTINE]
1=__IN_struct _RTL_GENERIC_TABLE
2=*Table __IN_PVOID
ParamCount=2
@=RTL_GENERIC_FREE_ROUTINE
[RtlInitializeGenericTable]
1=__OUT_PRTL_GENERIC_TABLE Table
2=__IN_PRTL_GENERIC_COMPARE_ROUTINE CompareRoutine
3=__IN_PRTL_GENERIC_ALLOCATE_ROUTINE AllocateRoutine
4=__IN_PRTL_GENERIC_FREE_ROUTINE FreeRoutine
5=__in_opt PVOID
ParamCount=5
@=RtlInitializeGenericTable
[RtlInsertElementGenericTable]
1=__IN_PRTL_GENERIC_TABLE Table
2=PVOID Buffer
3=__IN_CLONG BufferSize
4=__out_opt PBOOLEAN
ParamCount=4
@=RtlInsertElementGenericTable
[RtlInsertElementGenericTableFull]
1=__IN_PRTL_GENERIC_TABLE Table
2=PVOID Buffer
3=__IN_CLONG BufferSize
4=__out_opt PBOOLEAN
5=NewElement __IN_PVOID
6=NodeOrParent __IN_TABLE_SEARCH_RESULT
ParamCount=6
@=RtlInsertElementGenericTableFull
[RtlDeleteElementGenericTable]
1=__IN_PRTL_GENERIC_TABLE Table
2=__IN_PVOID Buffer
ParamCount=2
@=RtlDeleteElementGenericTable
[RtlLookupElementGenericTable]
1=__IN_PRTL_GENERIC_TABLE Table
2=__IN_PVOID Buffer
ParamCount=2
@=RtlLookupElementGenericTable
[RtlLookupElementGenericTableFull]
1=__IN_PRTL_GENERIC_TABLE Table
2=__IN_PVOID Buffer
3=__OUT_PVOID *NodeOrParent
4=__OUT_TABLE_SEARCH_RESULT *SearchResult
ParamCount=4
@=RtlLookupElementGenericTableFull
[RtlEnumerateGenericTable]
1=__IN_PRTL_GENERIC_TABLE Table
2=__IN_BOOLEAN Restart
ParamCount=2
@=RtlEnumerateGenericTable
[RtlEnumerateGenericTableWithoutSplaying]
1=__IN_PRTL_GENERIC_TABLE Table
2=__inOUT_PVOID *RestartKey
ParamCount=2
@=RtlEnumerateGenericTableWithoutSplaying
[RtlGetElementGenericTable]
1=__IN_PRTL_GENERIC_TABLE Table
2=__IN_ULONG I
ParamCount=2
@=RtlGetElementGenericTable
[RtlNumberGenericTableElements]
1=__IN_PRTL_GENERIC_TABLE Table
ParamCount=1
@=RtlNumberGenericTableElements
[RtlIsGenericTableEmpty]
1=__IN_PRTL_GENERIC_TABLE Table
ParamCount=1
@=RtlIsGenericTableEmpty
[NtCreateKey]
1=__OUT_PHANDLE KeyHandle
2=__IN_ACCESS_MASK DesiredAccess
3=__IN_POBJECT_ATTRIBUTES ObjectAttributes
4=__reserved ULONG
5=TitleIndex __in_opt
6=PUNICODE_STRING Class
7=__IN_ULONG CreateOptions
8=__out_opt PULONG
ParamCount=8
@=NtCreateKey
[_OUT_PHANDLE]
1=KeyHandle __IN_ACCESS_MASK
2=DesiredAccess __IN_POBJECT_ATTRIBUTES
3=ObjectAttributes __reserved
4=ULONG TitleIndex
5=__in_opt PUNICODE_STRING
6=Class __IN_ULONG
7=CreateOptions __IN_HANDLE
8=TransactionHandle __out_opt
9=PULONG Disposition
ParamCount=9
@=_OUT_PHANDLE
[NtOpenKey]
1=__OUT_PHANDLE KeyHandle
2=__IN_ACCESS_MASK DesiredAccess
3=__IN_POBJECT_ATTRIBUTES ObjectAttributes
ParamCount=3
@=NtOpenKey
[NtOpenKeyEx]
1=__OUT_PHANDLE KeyHandle
2=__IN_ACCESS_MASK DesiredAccess
3=__IN_POBJECT_ATTRIBUTES ObjectAttributes
4=__IN_ULONG OpenOptions
ParamCount=4
@=NtOpenKeyEx
[NtOpenKeyTransacted]
1=__OUT_PHANDLE KeyHandle
2=__IN_ACCESS_MASK DesiredAccess
3=__IN_POBJECT_ATTRIBUTES ObjectAttributes
4=__IN_HANDLE TransactionHandle
ParamCount=4
@=NtOpenKeyTransacted
[NtOpenKeyTransactedEx]
1=__OUT_PHANDLE KeyHandle
2=__IN_ACCESS_MASK DesiredAccess
3=__IN_POBJECT_ATTRIBUTES ObjectAttributes
4=__IN_ULONG OpenOptions
5=__IN_HANDLE TransactionHandle
ParamCount=5
@=NtOpenKeyTransactedEx
[NtDeleteKey]
1=__IN_HANDLE KeyHandle
ParamCount=1
@=NtDeleteKey
[NtDeleteValueKey]
1=__IN_HANDLE KeyHandle
2=__IN_PUNICODE_STRING ValueName
ParamCount=2
@=NtDeleteValueKey
[NtEnumerateKey]
1=__IN_HANDLE KeyHandle
2=__IN_ULONG Index
3=__IN_KEY_INFORMATION_CLASS KeyInformationClass
4=PVOID KeyInformation
5=__IN_ULONG Length
6=__OUT_PULONG ResultLength
ParamCount=6
@=NtEnumerateKey
[NtEnumerateValueKey]
1=__IN_HANDLE KeyHandle
2=__IN_ULONG Index
3=__IN_KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass
4=PVOID KeyValueInformation
5=__IN_ULONG Length
6=__OUT_PULONG ResultLength
ParamCount=6
@=NtEnumerateValueKey
[NtFlushKey]
1=__IN_HANDLE KeyHandle
ParamCount=1
@=NtFlushKey
[NtNotifyChangeMultipleKeys]
1=__IN_HANDLE MasterKeyHandle
2=__in_opt ULONG
3=Count OBJECT_ATTRIBUTES
4=SubordinateObjects[] __in_opt
5=HANDLE Event
6=__in_opt PIO_APC_ROUTINE
7=ApcRoutine __in_opt
8=PVOID ApcContext
9=__OUT_PIO_STATUS_BLOCK IoStatusBlock
10=__IN_ULONG CompletionFilter
11=__IN_BOOLEAN WatchTree
12=PVOID Buffer
13=__IN_ULONG BufferSize
14=__IN_BOOLEAN Asynchronous
ParamCount=14
@=NtNotifyChangeMultipleKeys
[NtQueryMultipleValueKey]
1=__IN_HANDLE KeyHandle
2=PKEY_VALUE_ENTRY ValueEntries
3=__IN_ULONG EntryCount
4=PVOID ValueBuffer
5=__inOUT_PULONG BufferLength
6=__out_opt PULONG
ParamCount=6
@=NtQueryMultipleValueKey
[NtQueryKey]
1=__IN_HANDLE KeyHandle
2=__IN_KEY_INFORMATION_CLASS KeyInformationClass
3=PVOID KeyInformation
4=__IN_ULONG Length
5=__OUT_PULONG ResultLength
ParamCount=5
@=NtQueryKey
[NtQueryValueKey]
1=__IN_HANDLE KeyHandle
2=__IN_PUNICODE_STRING ValueName
3=__IN_KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass
4=PVOID KeyValueInformation
5=__IN_ULONG Length
6=__OUT_PULONG ResultLength
ParamCount=6
@=NtQueryValueKey
[NtRenameKey]
1=__IN_HANDLE KeyHandle
2=__IN_PUNICODE_STRING NewName
ParamCount=2
@=NtRenameKey
[NtSetInformationKey]
1=__IN_HANDLE KeyHandle
2=__IN_KEY_SET_INFORMATION_CLASS KeySetInformationClass
3=PVOID KeySetInformation
4=__IN_ULONG KeySetInformationLength
ParamCount=4
@=NtSetInformationKey
[NtSetValueKey]
1=__IN_HANDLE KeyHandle
2=__IN_PUNICODE_STRING ValueName
3=__in_opt ULONG
4=TitleIndex __IN_ULONG
5=Type PVOID
6=Data __IN_ULONG
ParamCount=6
@=NtSetValueKey
[vsnprintf]
1=LPSTR size_t
2=const CHAR*
ParamCount=2
@=vsnprintf
[vsnwprintf]
1=LPWSTR size_t
2=const WCHAR*
ParamCount=2
@=vsnwprintf
[snprintf]
1=LPSTR size_t
2=const CHAR*
ParamCount=2
@=snprintf
[snwprintf]
1=LPWSTR size_t
2=const WCHAR*
ParamCount=2
@=snwprintf
[sscanf]
1=LPSTR buffer
2=CHAR* format
ParamCount=2
@=sscanf
[long]
1=wcstoul LPCWSTR
2=buffer WCHAR**
3=ppEndChar int
ParamCount=3
@=long
[_int64]
1=_wcstoui64 LPCWSTR
2=buffer WCHAR**
3=ppEndChar int
ParamCount=3
@=_int64
[wtoi64]
1=LPCWSTR buffer
ParamCount=1
@=wtoi64
